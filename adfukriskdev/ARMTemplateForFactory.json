{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfukriskdev"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gblukriskeng.dfs.core.windows.net"
		},
		"akv_adlsstorage_adf_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://sreehithgroup.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/IfconditionCopyadf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Using if condition activity copying the files to ADLS output",
				"activities": [
					{
						"name": "Sales_Product_FileMap",
						"description": "To identify the sales & Product inputfiles",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "FileexistanceCheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(pipeline().parameters.CSVFileType)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy Product Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Product_Dataset",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": {
													"value": "@pipeline().globalParameters.ContainerName",
													"type": "Expression"
												},
												"InputFolder": {
													"value": "@pipeline().globalParameters.inputFolder",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Product_Json_Dataset",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": {
													"value": "@pipeline().globalParameters.ContainerName",
													"type": "Expression"
												},
												"TgtProductFolder": {
													"value": "@pipeline().parameters.TgtProductFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "CopySalesdata",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Sales_Address_Dataset",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": {
													"value": "@pipeline().globalParameters.ContainerName",
													"type": "Expression"
												},
												"InputFolder": {
													"value": "@pipeline().globalParameters.inputFolder",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Sales_Json_Dataset",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": {
													"value": "@pipeline().globalParameters.ContainerName",
													"type": "Expression"
												},
												"TgtSalesFolderName": {
													"value": "@pipeline().parameters.TgtSalesFolder",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FileexistanceCheck",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('FileExists'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata_file_exists",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Sales_Address_Dataset",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": {
													"value": "@pipeline().globalParameters.ContainerName",
													"type": "Expression"
												},
												"InputFolder": {
													"value": "@pipeline().globalParameters.inputFolder",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "File_exists_condition",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata_file_exists",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(activity('Get Metadata_file_exists').output.exists)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Waitforsalesfile",
												"description": "15",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 180
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Filevariablechange",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "FileExists",
													"value": true
												}
											}
										]
									}
								}
							],
							"timeout": "0.00:30:00"
						}
					}
				],
				"parameters": {
					"TgtSalesFolder": {
						"type": "string",
						"defaultValue": "Sales_mrd"
					},
					"TgtProductFolder": {
						"type": "string",
						"defaultValue": "Product_mrd"
					},
					"CSVFileType": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"FileExists": {
						"type": "Boolean"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-06-13T14:15:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Product_Dataset')]",
				"[concat(variables('factoryId'), '/datasets/Product_Json_Dataset')]",
				"[concat(variables('factoryId'), '/datasets/Sales_Address_Dataset')]",
				"[concat(variables('factoryId'), '/datasets/Sales_Json_Dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Join_Dataflow_adf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Sample Job to join two datasets based on the Key Column in The Movie & Rating Dataset",
				"activities": [
					{
						"name": "MoviesDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MoviesData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Movies": {},
									"RatingsData": {},
									"MovieRating": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-13T15:04:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MoviesData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "InvoiceNo",
						"type": "varchar"
					},
					{
						"name": "StockCode",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceDate",
						"type": "varchar"
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "CustomerID",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "retail_data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MovieRatings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "riskeng"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Movies_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "movies.dat",
						"folderPath": "input",
						"fileSystem": "riskeng"
					},
					"columnDelimiter": "::",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "MovieId",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "Genre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Product_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"InputFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Sales_Address.csv",
						"folderPath": {
							"value": "@dataset().InputFolder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Product_Json_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"TgtProductFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Product.json",
						"folderPath": {
							"value": "@dataset().TgtProductFolder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RatingsData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ratings.dat",
						"folderPath": "input",
						"fileSystem": "riskeng"
					},
					"columnDelimiter": "::",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "UserID",
						"type": "String"
					},
					{
						"name": "MovieID",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Timestamp",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sales_Address_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"InputFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Sales_Address.csv",
						"folderPath": {
							"value": "@dataset().InputFolder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sales_Json_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"TgtSalesFolderName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().TgtSalesFolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/akv_adlsstorage_adf')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('akv_adlsstorage_adf_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Movies_Data",
								"type": "DatasetReference"
							},
							"name": "Movies"
						},
						{
							"dataset": {
								"referenceName": "RatingsData",
								"type": "DatasetReference"
							},
							"name": "RatingsData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MovieRatings",
								"type": "DatasetReference"
							},
							"name": "MovieRating"
						}
					],
					"transformations": [
						{
							"name": "MovieRatings"
						}
					],
					"script": "source(output(\n\t\tMovieId as integer '000',\n\t\tTitle as string,\n\t\tGenre as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: true,\n\tpreferredIntegralType: 'integer') ~> Movies\nsource(output(\n\t\tUserID as integer '000',\n\t\tMovieID as integer '000',\n\t\tRating as integer '000',\n\t\tTimestamp as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> RatingsData\nMovies, RatingsData join(Movies@MovieId == RatingsData@MovieID,\n\tjoinType:'inner',\n\tbroadcast: 'left')~> MovieRatings\nMovieRatings sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MovieRatings.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> MovieRating"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Movies_Data')]",
				"[concat(variables('factoryId'), '/datasets/RatingsData')]",
				"[concat(variables('factoryId'), '/datasets/MovieRatings')]"
			]
		}
	]
}